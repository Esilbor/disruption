srcs/requirements/mariadb/

srcs/requirements/mariadb/conf/my.cnf 

[server]

[mysqld]

user                    = mysql
pid-file                = /run/mysqld/mysqld.pid
socket                  = /run/mysqld/mysqld.sock
port                    = 3306
basedir                 = /usr
datadir                 = /var/lib/mysql
tmpdir                  = /tmp
lc-messages-dir         = /usr/share/mysql
bind-address=*

character-set-server  = utf8mb4
collation-server      = utf8mb4_general_ci

******************************
******************************

srcs/requirements/mariadb/conf/mysql_script.sh 

#!/bin/bash

service mariadb start;
echo je suis Maria des Baies;
sleep 5

mariadb -e "CREATE DATABASE IF NOT EXISTS \`${SQL_DATABASE}\`;"
mariadb -e "CREATE USER IF NOT EXISTS \`${SQL_USER}\`@'localhost' IDENTIFIED BY '${SQL_PASSWORD}';"
mariadb -e "GRANT ALL PRIVILEGES ON *.* TO \`root\`@'%' IDENTIFIED BY '${SQL_ROOT_PASSWORD}';"
mariadb -e "GRANT ALL PRIVILEGES ON ${SQL_DATABASE}.* TO \`${SQL_USER}\`@'%' IDENTIFIED BY '${SQL_PASSWORD}';"
mariadb -e "FLUSH PRIVILEGES;"

mysqladmin -u root -p$SQL_ROOT_PASSWORD shutdown
exec mysqld_safe

******************************
******************************

srcs/requirements/mariadb/Dockerfile

FROM debian:bullseye

RUN apt-get update -y && apt-get upgrade -y
RUN apt-get install mariadb-server mariadb-client procps -y


RUN mkdir -p /var/run/mysql && chown mysql:mysql /var/run/mysql && chmod 755 /var/run/mysql
RUN mkdir -p /var/lib/mysql && chown mysql:mysql /var/lib/mysql && chmod 755 /var/lib/mysql

COPY ./conf/my.cnf /etc/mysql/mariadb.conf.d/my.cnf
COPY ./conf/mysql_script.sh /mysql_script.sh
RUN chmod 755 /mysql_script.sh


EXPOSE 3306

ENTRYPOINT ["./mysql_script.sh"]


******************************
******************************

srcs/requirements/nginx/Dockerfile

FROM debian:bullseye

RUN apt update && apt install nginx -y
RUN apt install openssl -y

RUN mkdir -p /etc/nginx/ssl

RUN openssl req -x509 -nodes \
        -out /etc/nginx/ssl/inception.crt \
        -keyout /etc/nginx/ssl/inception.key \
        -subj "/C=FR/ST=IDF/L=Paris/O=42/OU=42/CN=bbresil.42.fr/UDI=bbresil"

RUN mkdir -p /var/run/nginx

COPY conf/nginx.conf /etc/nginx/nginx.conf

RUN chmod 755 /var/www/html
RUN chown -R www-data:www-data /var/www/html

EXPOSE 443

CMD [ "nginx", "-g", "daemon off;" ]


******************************
******************************

srcs/requirements/nginx/conf/nginx.conf


http {
    server
    {
        #ipv4
        listen 443 ssl;
        #ipv6
        listen [::]:443 ssl;
        server_name bbresil.42.fr;
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
        # Configuration SSL
        ssl_protocols TLSv1.3;
        ssl_certificate /etc/nginx/ssl/inception.crt;
        ssl_certificate_key /etc/nginx/ssl/inception.key;

        # Racine des fichiers WordPress
        root /var/www/wordpress;
        index index.php index.html index.htm;

        # Gestion des requêtes WordPress
        location /
        {
            include /etc/nginx/mime.types;
            try_files $uri $uri/ =404;
        }
            # gestion des requetes PHP
	        location ~ \.php$
            {
            include snippets/fastcgi-php.conf;
            fastcgi_pass wordpress:9000;
		    }
    }
}
# How Nginx server handles events (eg. incoming connections)
events {}

******************************
******************************


srcs/requirements/wordpress
srcs/requirements/wordpress/conf/wp-config.sh

#!/bin/bash
sleep 5

mkdir -p /run/php

# Utiliser wp-cli pour configurer WordPress
cd /var/www/wordpress
wp core download  --allow-root

wp core config --dbname=$SQL_DATABASE --dbuser=$SQL_USER --dbpass=$SQL_PASSWORD --dbhost=mariadb  --allow-root --skip-check
# wp db create --allow-root --path=/var/www/wordpress
wp core install --url=$DOMAIN_NAME --title="My WordPress Site" --admin_user=$WP_ADMIN_USER --admin_password=$WP_ADMIN_PASSWORD --admin_email=$WP_ADMIN_EMAIL --path=/var/www/wordpress --allow-root
wp user create --allow-root $WP_USER $WP_USER_EMAIL --user_pass=$WP_USER_PASSWORD --role=author --path=/var/www/wordpress
chown -R www-data:www-data /var/www/wordpress
chmod -R 755 /var/www/wordpress

exec php-fpm7.4 -Fdg


******************************
******************************

srcs/requirements/wordpress/Dockerfile

FROM        debian:bullseye
RUN         apt update
RUN         apt install -y wget\
            php7.4\
            php-fpm\
            php-mysql\
            mariadb-client
RUN         wget https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
RUN         chmod +x wp-cli.phar
RUN         mv wp-cli.phar /usr/local/bin/wp
RUN         echo "listen=9000" >> /etc/php/7.4/fpm/pool.d/www.conf 
COPY	    ./conf/wp-config.sh /wp-config.sh
RUN         chmod 755 /wp-config.sh
EXPOSE      9000
ENTRYPOINT  ["./wp-config.sh"]


******************************
******************************

srcs/.env 


# certificates
CERTS_=/etc/nginx/ssl/inception.crt

# MYSQL SETUP
DOMAIN_NAME=https://bbresil.42.fr
SQL_DATABASE=wordpress
SQL_USER=sqluser
SQL_PASSWORD=qwerty
SQL_ROOT_PASSWORD=qwerty

# WORDPRESS SETUP
WP_TITLE=INCEPTION
WP_ADMIN_USER=bbresil
WP_ADMIN_PASSWORD=qwerty
WP_ADMIN_EMAIL=bbresil@student.42.fr
WP_USER=wpuser
WP_USER_EMAIL=wp_user@student.42.fr
WP_USER_PASSWORD=qwerty

******************************
******************************

srcs/docker-compose.yml

services:
  mariadb:
    init: true
    container_name: mariadb
    networks:
      - inception
    build:
      context: requirements/mariadb
      dockerfile: Dockerfile
    env_file: .env
    volumes:
      - mariadb:/var/lib/mysql
    restart: unless-stopped
    expose:
      - "3306"
      
  nginx:
    init: true
    container_name: nginx
    volumes:
      - wordpress:/var/www/wordpress
    networks:
      - inception
    depends_on:
      - wordpress
    build:
      context: requirements/nginx
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "443:443"
    restart: on-failure

  wordpress:
    init: true
    container_name: wordpress
    networks:
      - inception
    env_file: .env
    volumes:
      - wordpress:/var/www/wordpress
    build:
      context: requirements/wordpress
      dockerfile: Dockerfile
    depends_on:
      - mariadb
    restart: on-failure
    expose:
      - "9000"


volumes:
  mariadb:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/home/boris/data/mariadb"

  wordpress:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/home/boris/data/wordpress"

networks:
  inception:
    name: inception
    driver: bridge


******************************
******************************

Makefile

# Variables
HOST_USER       = boris
PROJECT_NAME    = inception

IMAGES          = $(shell docker images -q)
CONTAINERS      = $(shell docker ps -aq)
VOLUMES         = $(shell docker volume ls -q)
NETWORKS        = $(shell docker network ls -q)

all: compose

compose: 
	mkdir -p /home/$(HOST_USER)/data/wordpress
	mkdir -p /home/$(HOST_USER)/data/mariadb
	docker compose -p $(PROJECT_NAME) -f ./srcs/docker-compose.yml up --build -d 
start:
	docker compose -p $(PROJECT_NAME) -f ./srcs/docker-compose.yml start
stop:
	docker compose -p $(PROJECT_NAME) -f ./srcs/docker-compose.yml stop
down:
	docker compose -p $(PROJECT_NAME) -f ./srcs/docker-compose.yml down

fclean: clean
	-docker system prune --volumes -f -a

clean: down
# Remove Docker containers
	-docker compose -p $(PROJECT_NAME) rm -f
# Remove Docker volumes
	-docker volume rm -f $(VOLUMES)
# Remove specific data directory
	sudo rm -rf /home/$(HOST_USER)/data

re: fclean compose



boris@inception:~/Inception$ tree
.
├── all.txt
├── basic_commands.md
├── Makefile
├── srcs
│   ├── docker-compose.yml
│   └── requirements
│       ├── bonus
│       │   └── static_webpage
│       ├── mariadb
│       │   ├── conf
│       │   │   ├── my.cnf
│       │   │   └── mysql_script.sh
│       │   └── Dockerfile
│       ├── nginx
│       │   ├── conf
│       │   │   └── nginx.conf
│       │   └── Dockerfile
│       └── wordpress
│           ├── conf
│           │   └── wp-config.sh
│           └── Dockerfile
└── step_by_step.md

11 directories, 12 files
boris@inception:~/Inception$ 